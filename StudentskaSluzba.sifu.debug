StudentskaSluzba project[
    url www.StudentskaSluzba.com
    namespace com.StudentskaSluzba](
    backend server[
        template java-springboot
        developer(
            Robert
            docker
        )
        security(
            principal Student
            role UserRole
            type(
                username
            )
            defaultRole STUDENT
            adminRole STUDENT
            signIn[
                query findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                )]
        )
        path /
        default model type mysql](
        UserRole enum(
            STUDENT STUDENT
        )
        Student model[
            type mysql
            unique(
                indeks
            )
            unique(
                username
            )](
            id integer[
                primarykey
                max 9223372036854775807]
            ime text[
                max 255]
            prezime text[
                max 255]
            indeks text[
                unique
                max 255]
            trenutnoStanjeRacuna decimal[
                precision 10
                scale 4]
            budzet boolean
            tekuciSemestar integer[
                min 1]
            osvojeniBodovi integer[
                min 0]
            prosecnaOcena find from Student as Student join StudPred as StudPred on Student with StudPred.student
            role UserRole
            username text[
                unique
                min 3
                max 128]
            passwordHash text[
                min 6
                max 128
                sensitive]
            findAll find from Student as Student
            countAll count from Student as Student
            findById find from Student as Student where Student.id == id
            getById get from Student as Student where Student.id == id
            deleteById delete from Student as Student where Student.id == id
            findByIme find from Student as Student where Student.ime == ime
            findByPrezime find from Student as Student where Student.prezime == prezime
            findByIndeks find from Student as Student where Student.indeks == indeks
            findByTrenutnoStanjeRacuna find from Student as Student where Student.trenutnoStanjeRacuna == trenutnoStanjeRacuna
            findByBudzet find from Student as Student where Student.budzet == budzet
            findByTekuciSemestar find from Student as Student where Student.tekuciSemestar == tekuciSemestar
            findByOsvojeniBodovi find from Student as Student where Student.osvojeniBodovi == osvojeniBodovi
            findByRole find from Student as Student where Student.role == role
            findByUsername find from Student as Student where Student.username == username
            findByPasswordHash find from Student as Student where Student.passwordHash == passwordHash
        )
        Predmet model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            naziv text[
                max 255]
            espb integer[
                min 0]
            obavezni boolean
            predlozeniSemestar integer[
                min 1]
            imeProfesora text[
                max 255]
            findAll find from Predmet as Predmet
            countAll count from Predmet as Predmet
            findById find from Predmet as Predmet where Predmet.id == id
            getById get from Predmet as Predmet where Predmet.id == id
            deleteById delete from Predmet as Predmet where Predmet.id == id
            findByNaziv find from Predmet as Predmet where Predmet.naziv == naziv
            findByEspb find from Predmet as Predmet where Predmet.espb == espb
            findByObavezni find from Predmet as Predmet where Predmet.obavezni == obavezni
            findByPredlozeniSemestar find from Predmet as Predmet where Predmet.predlozeniSemestar == predlozeniSemestar
            findByImeProfesora find from Predmet as Predmet where Predmet.imeProfesora == imeProfesora
        )
        Stanje model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            student Student[
                manyToOne]
            iznos decimal[
                precision 10
                scale 4]
            opis text[
                max 255]
            prethodnoStanje decimal[
                precision 10
                scale 4]
            datum datetime
            findAll find from Stanje as Stanje
            countAll count from Stanje as Stanje
            findById find from Stanje as Stanje where Stanje.id == id
            getById get from Stanje as Stanje where Stanje.id == id
            deleteById delete from Stanje as Stanje where Stanje.id == id
            findByStudent find from Stanje as Stanje where Stanje.student.id == studentId
            findByIznos find from Stanje as Stanje where Stanje.iznos == iznos
            findByOpis find from Stanje as Stanje where Stanje.opis == opis
            findByPrethodnoStanje find from Stanje as Stanje where Stanje.prethodnoStanje == prethodnoStanje
            findByDatum find from Stanje as Stanje where Stanje.datum == datum
        )
        Rok model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            godina integer
            naziv text[
                max 255]
            findAll find from Rok as Rok
            countAll count from Rok as Rok
            findById find from Rok as Rok where Rok.id == id
            getById get from Rok as Rok where Rok.id == id
            deleteById delete from Rok as Rok where Rok.id == id
            findByGodina find from Rok as Rok where Rok.godina == godina
            findByNaziv find from Rok as Rok where Rok.naziv == naziv
        )
        StudPred model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            student Student[
                manyToOne]
            predmet Predmet[
                manyToOne]
            ocena optional integer[
                max 10]
            datumPolozeno optional date
            semestarPrvogSlusanja integer[
                min 1]
            semestarPoslednjeSlusanja integer[
                min 1]
            nepolozeniPredmeti find from StudPred as StudPred join Predmet as Predmet on StudPred with StudPred.predmet where StudPred.ocena is not null and StudPred.student.id == userId
            prijavljeniPredmeti find from StudPred as StudPred join Predmet as Predmet on StudPred with StudPred.predmet where StudPred.student.id == userId
            polozeniPredmeti find from StudPred as StudPred join Predmet as Predmet on StudPred with StudPred.predmet where StudPred.student.id == userId
            neslusaniPredmeti find from StudPred as StudPred join Predmet as Predmet on StudPred with StudPred.predmet where StudPred.student.id == userId
            findAll find from StudPred as StudPred
            countAll count from StudPred as StudPred
            findById find from StudPred as StudPred where StudPred.id == id
            getById get from StudPred as StudPred where StudPred.id == id
            deleteById delete from StudPred as StudPred where StudPred.id == id
            findByStudent find from StudPred as StudPred where StudPred.student.id == studentId
            findByPredmet find from StudPred as StudPred where StudPred.predmet.id == predmetId
            findByOcena find from StudPred as StudPred where StudPred.ocena == ocena
            findByOcenaMandatory find from StudPred as StudPred where mandatory StudPred.ocena == ocena
            findByDatumPolozeno find from StudPred as StudPred where StudPred.datumPolozeno == datumPolozeno
            findByDatumPolozenoMandatory find from StudPred as StudPred where mandatory StudPred.datumPolozeno == datumPolozeno
            findBySemestarPrvogSlusanja find from StudPred as StudPred where StudPred.semestarPrvogSlusanja == semestarPrvogSlusanja
            findBySemestarPoslednjeSlusanja find from StudPred as StudPred where StudPred.semestarPoslednjeSlusanja == semestarPoslednjeSlusanja
            studPreds find from StudPred as StudPred
        )
        Prijava model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            rok Rok[
                manyToOne]
            studPred StudPred[
                manyToOne]
            findAll find from Prijava as Prijava
            countAll count from Prijava as Prijava
            findById find from Prijava as Prijava where Prijava.id == id
            getById get from Prijava as Prijava where Prijava.id == id
            deleteById delete from Prijava as Prijava where Prijava.id == id
            findByRok find from Prijava as Prijava where Prijava.rok.id == rokId
            findByStudPred find from Prijava as Prijava where Prijava.studPred.id == studPredId
        )
        StudentApi api(
            readStudent find[
                get /student/:id
                query Student.findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                    Student.passwordHash
                )
                errors
                request ReadStudentRequest
                response ReadStudentResponse]
            ReadStudentRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            ReadStudentResponse dto(
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
                passwordHash text[
                    min 6
                    max 128
                    sensitive]
            )
            createStudent create[
                post /student
                model Student
                query Student.findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                    Student.passwordHash
                )
                errors
                request CreateStudentRequest
                response CreateStudentResponse](
                id id[
                    visible(
                        read
                    )]
                ime ime[
                    visible(
                        create
                        read
                    )]
                prezime prezime[
                    visible(
                        create
                        read
                    )]
                indeks indeks[
                    visible(
                        create
                        read
                    )]
                trenutnoStanjeRacuna trenutnoStanjeRacuna[
                    visible(
                        create
                        read
                    )]
                budzet budzet[
                    visible(
                        create
                        read
                    )]
                tekuciSemestar tekuciSemestar[
                    visible(
                        create
                        read
                    )]
                osvojeniBodovi osvojeniBodovi[
                    visible(
                        create
                        read
                    )]
                role role[
                    visible(
                        create
                        read
                    )]
                username username[
                    visible(
                        create
                        read
                    )]
                passwordHash passwordHash[
                    visible(
                        create
                        read
                    )]
            )
            CreateStudentRequest dto(
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
                passwordHash text[
                    min 6
                    max 128
                    sensitive]
            )
            CreateStudentResponse dto(
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
                passwordHash text[
                    min 6
                    max 128
                    sensitive]
            )
            updateStudent update[
                put /student/:id
                model Student
                query Student.findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                    Student.passwordHash
                )
                errors
                request UpdateStudentRequest
                response UpdateStudentResponse](
                id id[
                    visible(
                        read
                        update
                    )]
                ime ime[
                    visible(
                        read
                        update
                    )]
                prezime prezime[
                    visible(
                        read
                        update
                    )]
                indeks indeks[
                    visible(
                        read
                        update
                    )]
                trenutnoStanjeRacuna trenutnoStanjeRacuna[
                    visible(
                        read
                        update
                    )]
                budzet budzet[
                    visible(
                        read
                        update
                    )]
                tekuciSemestar tekuciSemestar[
                    visible(
                        read
                        update
                    )]
                osvojeniBodovi osvojeniBodovi[
                    visible(
                        read
                        update
                    )]
                role role[
                    visible(
                        read
                        update
                    )]
                username username[
                    visible(
                        read
                        update
                    )]
                passwordHash passwordHash[
                    visible(
                        read
                        update
                    )]
            )
            UpdateStudentRequest dto(
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
                passwordHash text[
                    min 6
                    max 128
                    sensitive]
            )
            UpdateStudentResponse dto(
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
                passwordHash text[
                    min 6
                    max 128
                    sensitive]
            )
            deleteStudent delete[
                delete /student/:id
                query Student.findById
                errors
                request DeleteStudentRequest]
            DeleteStudentRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            trenutnoStanje find[
                query Student.findById
                response(
                    Student.trenutnoStanjeRacuna
                )
                get /trenutno-stanje
                errors
                request TrenutnoStanjeRequest
                response TrenutnoStanjeResponse]
            TrenutnoStanjeRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            TrenutnoStanjeResponse dto(
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
            )
            prosecnaOcena custom[
                request ProsecnaOcenaRequest
                response ProsecnaOcenaResponse
                get /prosecna-ocena
                errors]
            ProsecnaOcenaRequest dto(
                userId integer
            )
            ProsecnaOcenaResponse dto(
                prosek decimal[
                    precision 10
                    scale 4]
            )
        )
        StudPredApi api(
            readStudPred find[
                get /studPred/:id
                query StudPred.findById
                response(
                    StudPred.id
                    StudPred.student.id
                    StudPred.predmet.id
                    StudPred.ocena
                    StudPred.datumPolozeno
                    StudPred.semestarPrvogSlusanja
                    StudPred.semestarPoslednjeSlusanja
                )
                errors
                request ReadStudPredRequest
                response ReadStudPredResponse]
            ReadStudPredRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            ReadStudPredResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                predmetId integer[
                    max 9223372036854775807]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
                semestarPrvogSlusanja integer[
                    min 1]
                semestarPoslednjeSlusanja integer[
                    min 1]
            )
            createStudPred create[
                post /studPred
                model StudPred
                query StudPred.findById
                response(
                    StudPred.id
                    StudPred.student.id
                    StudPred.predmet.id
                    StudPred.ocena
                    StudPred.datumPolozeno
                    StudPred.semestarPrvogSlusanja
                    StudPred.semestarPoslednjeSlusanja
                )
                errors
                request CreateStudPredRequest
                response CreateStudPredResponse](
                id id[
                    visible(
                        read
                    )]
                studentId student.id[
                    visible(
                        create
                        read
                    )]
                predmetId predmet.id[
                    visible(
                        create
                        read
                    )]
                ocena ocena[
                    visible(
                        create
                        read
                    )]
                datumPolozeno datumPolozeno[
                    visible(
                        create
                        read
                    )]
                semestarPrvogSlusanja semestarPrvogSlusanja[
                    visible(
                        create
                        read
                    )]
                semestarPoslednjeSlusanja semestarPoslednjeSlusanja[
                    visible(
                        create
                        read
                    )]
            )
            CreateStudPredRequest dto(
                studentId integer[
                    max 9223372036854775807]
                predmetId integer[
                    max 9223372036854775807]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
                semestarPrvogSlusanja integer[
                    min 1]
                semestarPoslednjeSlusanja integer[
                    min 1]
            )
            CreateStudPredResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                predmetId integer[
                    max 9223372036854775807]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
                semestarPrvogSlusanja integer[
                    min 1]
                semestarPoslednjeSlusanja integer[
                    min 1]
            )
            updateStudPred update[
                put /studPred/:id
                model StudPred
                query StudPred.findById
                response(
                    StudPred.id
                    StudPred.student.id
                    StudPred.predmet.id
                    StudPred.ocena
                    StudPred.datumPolozeno
                    StudPred.semestarPrvogSlusanja
                    StudPred.semestarPoslednjeSlusanja
                )
                errors
                request UpdateStudPredRequest
                response UpdateStudPredResponse](
                id id[
                    visible(
                        read
                        update
                    )]
                studentId student.id[
                    visible(
                        read
                        update
                    )]
                predmetId predmet.id[
                    visible(
                        read
                        update
                    )]
                ocena ocena[
                    visible(
                        read
                        update
                    )]
                datumPolozeno datumPolozeno[
                    visible(
                        read
                        update
                    )]
                semestarPrvogSlusanja semestarPrvogSlusanja[
                    visible(
                        read
                        update
                    )]
                semestarPoslednjeSlusanja semestarPoslednjeSlusanja[
                    visible(
                        read
                        update
                    )]
            )
            UpdateStudPredRequest dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                predmetId integer[
                    max 9223372036854775807]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
                semestarPrvogSlusanja integer[
                    min 1]
                semestarPoslednjeSlusanja integer[
                    min 1]
            )
            UpdateStudPredResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                predmetId integer[
                    max 9223372036854775807]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
                semestarPrvogSlusanja integer[
                    min 1]
                semestarPoslednjeSlusanja integer[
                    min 1]
            )
            deleteStudPred delete[
                delete /studPred/:id
                query StudPred.findById
                errors
                request DeleteStudPredRequest]
            DeleteStudPredRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            studPreds find[
                query StudPred.studPreds
                get /stud-preds
                errors
                response(
                    StudPred.id
                    StudPred.student.id
                    StudPred.predmet.id
                    StudPred.ocena
                    StudPred.datumPolozeno
                    StudPred.semestarPrvogSlusanja
                    StudPred.semestarPoslednjeSlusanja
                )
                response list StudPredsResponse]
            StudPredsResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                predmetId integer[
                    max 9223372036854775807]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
                semestarPrvogSlusanja integer[
                    min 1]
                semestarPoslednjeSlusanja integer[
                    min 1]
            )
            nepolozeniPredmeti find[
                query StudPred.nepolozeniPredmeti
                response(
                    Predmet.id
                    Predmet.naziv
                    Predmet.espb
                    Predmet.obavezni
                    Predmet.predlozeniSemestar
                    Predmet.imeProfesora
                    StudPred.semestarPrvogSlusanja
                )
                get /nepolozeni-predmeti
                errors
                request NepolozeniPredmetiRequest
                response list NepolozeniPredmetiResponse]
            NepolozeniPredmetiRequest dto(
                userId integer[
                    max 9223372036854775807]
            )
            NepolozeniPredmetiResponse dto(
                predmetId integer[
                    max 9223372036854775807]
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetPredlozeniSemestar integer[
                    min 1]
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
            )
            prijavljeniPredmeti find[
                query StudPred.prijavljeniPredmeti
                response(
                    Predmet.naziv
                    Predmet.espb
                    Predmet.obavezni
                    Predmet.predlozeniSemestar
                    Predmet.imeProfesora
                    StudPred.semestarPrvogSlusanja
                )
                get /prijavljeni-predmeti
                errors
                request PrijavljeniPredmetiRequest
                response list PrijavljeniPredmetiResponse]
            PrijavljeniPredmetiRequest dto(
                userId integer[
                    max 9223372036854775807]
            )
            PrijavljeniPredmetiResponse dto(
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetPredlozeniSemestar integer[
                    min 1]
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
            )
            polozeniPredmeti find[
                query StudPred.polozeniPredmeti
                response(
                    Predmet.id
                    Predmet.naziv
                    Predmet.espb
                    Predmet.obavezni
                    Predmet.imeProfesora
                    StudPred.semestarPrvogSlusanja
                    StudPred.ocena
                    StudPred.datumPolozeno
                )
                get /polozeni-predmeti
                errors
                request PolozeniPredmetiRequest
                response list PolozeniPredmetiResponse]
            PolozeniPredmetiRequest dto(
                userId integer[
                    max 9223372036854775807]
            )
            PolozeniPredmetiResponse dto(
                predmetId integer[
                    max 9223372036854775807]
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
            )
            neslusaniPredmeti find[
                query StudPred.neslusaniPredmeti
                response(
                    Predmet.id
                    Predmet.naziv
                    Predmet.espb
                    Predmet.obavezni
                    Predmet.predlozeniSemestar
                    Predmet.imeProfesora
                    StudPred.semestarPrvogSlusanja
                )
                get /neslusani-predmeti
                errors
                request NeslusaniPredmetiRequest
                response list NeslusaniPredmetiResponse]
            NeslusaniPredmetiRequest dto(
                userId integer[
                    max 9223372036854775807]
            )
            NeslusaniPredmetiResponse dto(
                predmetId integer[
                    max 9223372036854775807]
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetPredlozeniSemestar integer[
                    min 1]
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
            )
            prijaviPredmet custom[
                request PrijaviPredmetRequest
                post /prijavi
                errors]
            PrijaviPredmetRequest dto(
                userId integer
                predmetId integer
            )
            slusajPredmet custom[
                request SlusajPredmetRequest
                post /slusaj
                errors]
            SlusajPredmetRequest dto(
                userId integer
                predmetId integer
            )
        )
        FinansijeApi api(
            readFinansije find[
                get /finansije/:id
                query Stanje.findById
                response(
                    Stanje.id
                    Stanje.student.id
                    Stanje.iznos
                    Stanje.opis
                    Stanje.prethodnoStanje
                    Stanje.datum
                )
                errors
                request ReadFinansijeRequest
                response ReadFinansijeResponse]
            ReadFinansijeRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            ReadFinansijeResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
            createFinansije create[
                post /finansije
                model Stanje
                query Stanje.findById
                response(
                    Stanje.id
                    Stanje.student.id
                    Stanje.iznos
                    Stanje.opis
                    Stanje.prethodnoStanje
                    Stanje.datum
                )
                errors
                request CreateFinansijeRequest
                response CreateFinansijeResponse](
                id id[
                    visible(
                        read
                    )]
                studentId student.id[
                    visible(
                        create
                        read
                    )]
                iznos iznos[
                    visible(
                        create
                        read
                    )]
                opis opis[
                    visible(
                        create
                        read
                    )]
                prethodnoStanje prethodnoStanje[
                    visible(
                        create
                        read
                    )]
                datum datum[
                    visible(
                        create
                        read
                    )]
            )
            CreateFinansijeRequest dto(
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
            CreateFinansijeResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
            updateFinansije update[
                put /finansije/:id
                model Stanje
                query Stanje.findById
                response(
                    Stanje.id
                    Stanje.student.id
                    Stanje.iznos
                    Stanje.opis
                    Stanje.prethodnoStanje
                    Stanje.datum
                )
                errors
                request UpdateFinansijeRequest
                response UpdateFinansijeResponse](
                id id[
                    visible(
                        read
                        update
                    )]
                studentId student.id[
                    visible(
                        read
                        update
                    )]
                iznos iznos[
                    visible(
                        read
                        update
                    )]
                opis opis[
                    visible(
                        read
                        update
                    )]
                prethodnoStanje prethodnoStanje[
                    visible(
                        read
                        update
                    )]
                datum datum[
                    visible(
                        read
                        update
                    )]
            )
            UpdateFinansijeRequest dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
            UpdateFinansijeResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
            deleteFinansije delete[
                delete /finansije/:id
                query Stanje.findById
                errors
                request DeleteFinansijeRequest]
            DeleteFinansijeRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            finansijeStudenta find[
                query Stanje.findByStudent
                get /finansije-studenta
                errors
                request FinansijeStudentaRequest
                response(
                    Stanje.id
                    Stanje.student.id
                    Stanje.iznos
                    Stanje.opis
                    Stanje.prethodnoStanje
                    Stanje.datum
                )
                response list FinansijeStudentaResponse]
            FinansijeStudentaRequest dto(
                studentId integer[
                    max 9223372036854775807]
            )
            FinansijeStudentaResponse dto(
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
        )
        CREDENTIALS_ARE_INVALID unauthorized
        ACCESS_TOKEN_IS_EXPIRED unauthorized
        USER_ALREADY_EXIST dataConstraint
        INSUFFICIENT_RIGHTS unauthorized
        AuthenticationApi api(
            signUp signup[
                post /sign-up
                query Student.findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                )
                errors
                request SignUpRequest
                response SignUpResponse](
                ime ime
                prezime prezime
                indeks indeks
                trenutnoStanjeRacuna trenutnoStanjeRacuna
                budzet budzet
                tekuciSemestar tekuciSemestar
                osvojeniBodovi osvojeniBodovi
                username username
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            SignUpRequest dto(
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                username text[
                    min 3
                    max 128]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            SignUpResponse dto(
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
            )
            signIn signIn[
                request SignInRequest
                post /sign-in
                query Student.findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                )
                errors
                response SignInResponse]
            SignInRequest dto(
                username text[
                    min 3
                    max 128]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            SignInResponse dto(
                accessToken text[
                    min 64
                    max 64
                    sensitive]
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
            )
            changePassword changepassword[
                request ChangePasswordRequest
                secured
                post /change-password
                query Student.findById
                response(
                    Student.id
                    Student.ime
                    Student.prezime
                    Student.indeks
                    Student.trenutnoStanjeRacuna
                    Student.budzet
                    Student.tekuciSemestar
                    Student.osvojeniBodovi
                    Student.role
                    Student.username
                )
                errors
                response ChangePasswordResponse]
            ChangePasswordRequest dto(
                oldPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
                newPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            ChangePasswordResponse dto(
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role UserRole
                username text[
                    min 3
                    max 128]
            )
        )
    )
    webapp client[
        template js-angular
        connectedTo(
            backend.StudentApi.readStudent
            backend.StudentApi.createStudent
            backend.StudentApi.updateStudent
            backend.StudentApi.deleteStudent
            backend.StudentApi.trenutnoStanje
            backend.StudentApi.prosecnaOcena
            backend.StudPredApi.readStudPred
            backend.StudPredApi.createStudPred
            backend.StudPredApi.updateStudPred
            backend.StudPredApi.deleteStudPred
            backend.StudPredApi.studPreds
            backend.StudPredApi.nepolozeniPredmeti
            backend.StudPredApi.prijavljeniPredmeti
            backend.StudPredApi.polozeniPredmeti
            backend.StudPredApi.neslusaniPredmeti
            backend.StudPredApi.prijaviPredmet
            backend.StudPredApi.slusajPredmet
            backend.FinansijeApi.readFinansije
            backend.FinansijeApi.createFinansije
            backend.FinansijeApi.updateFinansije
            backend.FinansijeApi.deleteFinansije
            backend.FinansijeApi.finansijeStudenta
            backend.AuthenticationApi.signUp
            backend.AuthenticationApi.signIn
            backend.AuthenticationApi.changePassword
        )
        path /path
        home signInPage
        loggedin MainLayout
        i18n(
            en
        )](
        MainLayout page[
            path /main-layout](
            naslovna button{
                on click(
                    goto naslovnaPage(
                        principal . id
                    )
                )}
            predmeti button{
                on click(
                    goto PredmetiPage(
                        principal . id
                    )
                )}
            finansije button{
                on click(
                    goto finansijePage(
                        principal . id
                    )
                )}
            placeholder
        )
        studentChangedEvent event
        naslovnaPage page[
            path /home
            params(
                userId integer
            )](
            UpdateTaskGroupForm UpdateTaskGroupForm[
                bind(
                    params . userId
                )]
        )
        PredmetiPage page[
            path /predmeti
            params(
                userId integer
            )](
            nepolozeni button{
                on click(
                    goto nepolozeniPage(
                        params . userId
                    )
                )}
            polozeni button{
                on click(
                    goto polozeniPage(
                        params . userId
                    )
                )}
            neslusani button{
                on click(
                    goto neslusaniPage(
                        params . userId
                    )
                )}
            placeholder
        )
        predmetChangedEvent event
        nepolozeniPage page[
            path /nepolozeni
            params(
                userId integer
            )](
            nepolozeni nepolozeni[
                bind(
                    params . userId
                )]
            prijavljeni prijavljeni[
                bind(
                    params . userId
                )]
        )
        polozeniPage page[
            path /polozeni
            params(
                userId integer
            )](
            polozeni polozeni[
                bind(
                    params . userId
                )]
        )
        neslusaniPage page[
            path /neslusani
            params(
                userId integer
            )](
            neslusani neslusani[
                bind(
                    params . userId
                )]
        )
        finansijePage page[
            path /finansije
            params(
                userId integer
            )](
            trenutnoStanje trenutnoStanje[
                bind(
                    params . userId
                )]
            finanasijeTable finanasijeTable[
                bind(
                    params . userId
                )]
        )
        signInPage page[
            path /sign-in](
            signInForm signInForm
            signUp link{
                on click(
                    goto signUpPage
                )}
        )
        signUpPage page[
            path /sign-up](
            signUpForm signUpForm
            signIn link{
                on click(
                    goto signInPage
                )}
        )
        UserSignedIn event[
            dto backend.AuthenticationApi.SignInResponse](
            accessToken text[
                min 64
                max 64
                sensitive]
            id integer[
                max 9223372036854775807]
            ime text[
                max 255]
            prezime text[
                max 255]
            indeks text[
                max 255]
            trenutnoStanjeRacuna decimal[
                precision 10
                scale 4]
            budzet boolean
            tekuciSemestar integer[
                min 1]
            osvojeniBodovi integer[
                min 0]
            role backend.UserRole
            username text[
                min 3
                max 128]
        )
        changePasswordForm form[
            submit backend.AuthenticationApi.changePassword
            model[
                dto backend.AuthenticationApi.ChangePasswordRequest](
                oldPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
                newPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                oldPassword
                newPassword
            )](
            oldPassword text[
                bind(
                    model . oldPassword
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            newPassword text[
                bind(
                    model . newPassword
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                goto signInPage
            )}
        UpdateTaskGroupForm form[
            load StudentApi.readStudent
            submit StudentApi.updateStudent
            model[
                dto backend.StudentApi.UpdateStudentRequest](
                id integer[
                    max 9223372036854775807]
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                role backend.UserRole
                username text[
                    min 3
                    max 128]
                passwordHash text[
                    min 6
                    max 128
                    sensitive]
            )
            params[
                dto backend.StudentApi.ReadStudentRequest](
                id integer[
                    max 9223372036854775807]
            )
            visible(
                id
                ime
                prezime
                indeks
                trenutnoStanjeRacuna
                budzet
                tekuciSemestar
                osvojeniBodovi
                role
                username
                passwordHash
            )](
            id integer[
                bind(
                    model . id
                )
                max 9223372036854775807]
            ime text[
                bind(
                    model . ime
                )
                max 255]
            prezime text[
                bind(
                    model . prezime
                )
                max 255]
            indeks text[
                bind(
                    model . indeks
                )
                max 255]
            trenutnoStanjeRacuna decimal[
                bind(
                    model . trenutnoStanjeRacuna
                )
                precision 10
                scale 4]
            budzet boolean[
                bind(
                    model . budzet
                )]
            tekuciSemestar integer[
                bind(
                    model . tekuciSemestar
                )
                min 1]
            osvojeniBodovi integer[
                bind(
                    model . osvojeniBodovi
                )
                min 0]
            role UserRoleDropDown[
                bind(
                    model . role
                )]
            username text[
                bind(
                    model . username
                )
                min 3
                max 128]
            passwordHash text[
                bind(
                    model . passwordHash
                )
                min 6
                max 128
                sensitive]
            submit button
        ){
            on success(
                goto naslovnaPage(
                    success . id
                )
            )}
        nepolozeni table[
            load StudPredApi.nepolozeniPredmeti
            params[
                dto backend.StudPredApi.NepolozeniPredmetiRequest](
                userId integer[
                    max 9223372036854775807]
            )
            model[
                dto backend.StudPredApi.NepolozeniPredmetiResponse](
                predmetId integer[
                    max 9223372036854775807]
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetPredlozeniSemestar integer[
                    min 1]
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
            )
            visible(
                predmetId
                predmetNaziv
                predmetEspb
                predmetObavezni
                predmetPredlozeniSemestar
                predmetImeProfesora
                semestarPrvogSlusanja
            )](
            predmetId integer[
                bind(
                    model . predmetId
                )
                max 9223372036854775807]
            predmetNaziv text[
                bind(
                    model . predmetNaziv
                )
                max 255]
            predmetEspb integer[
                bind(
                    model . predmetEspb
                )
                min 0]
            predmetObavezni boolean[
                bind(
                    model . predmetObavezni
                )]
            predmetPredlozeniSemestar integer[
                bind(
                    model . predmetPredlozeniSemestar
                )
                min 1]
            predmetImeProfesora text[
                bind(
                    model . predmetImeProfesora
                )
                max 255]
            semestarPrvogSlusanja integer[
                bind(
                    model . semestarPrvogSlusanja
                )
                min 1]
            prijavi button{
                on click(
                    call StudPredApi.prijaviPredmet(
                        params . userId
                        item . predmetId
                    ){
                        on success(
                            fire predmetChangedEvent
                        )}
                )}
        ){
            on predmetChangedEvent(
                reload
            )}
        prijavljeni table[
            load StudPredApi.prijavljeniPredmeti
            params[
                dto backend.StudPredApi.PrijavljeniPredmetiRequest](
                userId integer[
                    max 9223372036854775807]
            )
            model[
                dto backend.StudPredApi.PrijavljeniPredmetiResponse](
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetPredlozeniSemestar integer[
                    min 1]
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
            )
            visible(
                predmetNaziv
                predmetEspb
                predmetObavezni
                predmetPredlozeniSemestar
                predmetImeProfesora
                semestarPrvogSlusanja
            )](
            predmetNaziv text[
                bind(
                    model . predmetNaziv
                )
                max 255]
            predmetEspb integer[
                bind(
                    model . predmetEspb
                )
                min 0]
            predmetObavezni boolean[
                bind(
                    model . predmetObavezni
                )]
            predmetPredlozeniSemestar integer[
                bind(
                    model . predmetPredlozeniSemestar
                )
                min 1]
            predmetImeProfesora text[
                bind(
                    model . predmetImeProfesora
                )
                max 255]
            semestarPrvogSlusanja integer[
                bind(
                    model . semestarPrvogSlusanja
                )
                min 1]
        ){
            on predmetChangedEvent(
                reload
            )}
        polozeni table[
            load StudPredApi.polozeniPredmeti
            params[
                dto backend.StudPredApi.PolozeniPredmetiRequest](
                userId integer[
                    max 9223372036854775807]
            )
            model[
                dto backend.StudPredApi.PolozeniPredmetiResponse](
                predmetId integer[
                    max 9223372036854775807]
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
                ocena optional integer[
                    max 10]
                datumPolozeno optional date
            )
            visible(
                predmetId
                predmetNaziv
                predmetEspb
                predmetObavezni
                predmetImeProfesora
                semestarPrvogSlusanja
                ocena
                datumPolozeno
            )](
            predmetId integer[
                bind(
                    model . predmetId
                )
                max 9223372036854775807]
            predmetNaziv text[
                bind(
                    model . predmetNaziv
                )
                max 255]
            predmetEspb integer[
                bind(
                    model . predmetEspb
                )
                min 0]
            predmetObavezni boolean[
                bind(
                    model . predmetObavezni
                )]
            predmetImeProfesora text[
                bind(
                    model . predmetImeProfesora
                )
                max 255]
            semestarPrvogSlusanja integer[
                bind(
                    model . semestarPrvogSlusanja
                )
                min 1]
            ocena optional integer[
                bind(
                    model . ocena
                )
                max 10]
            datumPolozeno optional date[
                bind(
                    model . datumPolozeno
                )]
        ){
            on predmetChangedEvent(
                reload
            )}
        neslusani table[
            load StudPredApi.neslusaniPredmeti
            params[
                dto backend.StudPredApi.NeslusaniPredmetiRequest](
                userId integer[
                    max 9223372036854775807]
            )
            model[
                dto backend.StudPredApi.NeslusaniPredmetiResponse](
                predmetId integer[
                    max 9223372036854775807]
                predmetNaziv text[
                    max 255]
                predmetEspb integer[
                    min 0]
                predmetObavezni boolean
                predmetPredlozeniSemestar integer[
                    min 1]
                predmetImeProfesora text[
                    max 255]
                semestarPrvogSlusanja integer[
                    min 1]
            )
            visible(
                predmetId
                predmetNaziv
                predmetEspb
                predmetObavezni
                predmetPredlozeniSemestar
                predmetImeProfesora
                semestarPrvogSlusanja
            )](
            predmetId integer[
                bind(
                    model . predmetId
                )
                max 9223372036854775807]
            predmetNaziv text[
                bind(
                    model . predmetNaziv
                )
                max 255]
            predmetEspb integer[
                bind(
                    model . predmetEspb
                )
                min 0]
            predmetObavezni boolean[
                bind(
                    model . predmetObavezni
                )]
            predmetPredlozeniSemestar integer[
                bind(
                    model . predmetPredlozeniSemestar
                )
                min 1]
            predmetImeProfesora text[
                bind(
                    model . predmetImeProfesora
                )
                max 255]
            semestarPrvogSlusanja integer[
                bind(
                    model . semestarPrvogSlusanja
                )
                min 1]
            slusaj button{
                on click(
                    call StudPredApi.slusajPredmet(
                        params . userId
                        item . predmetId
                    ){
                        on success(
                            fire predmetChangedEvent
                        )}
                )}
        ){
            on predmetChangedEvent(
                reload
            )}
        trenutnoStanje form[
            model(
                stanje integer
            )
            load StudentApi.trenutnoStanje
            params[
                dto backend.StudentApi.TrenutnoStanjeRequest](
                id integer[
                    max 9223372036854775807]
            )
            visible(
                stanje
            )](
            stanje integer[
                bind(
                    model . stanje
                )]
        ){
            on predmetChangedEvent(
                reload
            )}
        finanasijeTable table[
            load FinansijeApi.finansijeStudenta
            params[
                dto backend.FinansijeApi.FinansijeStudentaRequest](
                studentId integer[
                    max 9223372036854775807]
            )
            model[
                dto backend.FinansijeApi.FinansijeStudentaResponse](
                id integer[
                    max 9223372036854775807]
                studentId integer[
                    max 9223372036854775807]
                iznos decimal[
                    precision 10
                    scale 4]
                opis text[
                    max 255]
                prethodnoStanje decimal[
                    precision 10
                    scale 4]
                datum datetime
            )
            visible(
                id
                studentId
                iznos
                opis
                prethodnoStanje
                datum
            )](
            id integer[
                bind(
                    model . id
                )
                max 9223372036854775807]
            studentId integer[
                bind(
                    model . studentId
                )
                max 9223372036854775807]
            iznos decimal[
                bind(
                    model . iznos
                )
                precision 10
                scale 4]
            opis text[
                bind(
                    model . opis
                )
                max 255]
            prethodnoStanje decimal[
                bind(
                    model . prethodnoStanje
                )
                precision 10
                scale 4]
            datum datetime[
                bind(
                    model . datum
                )]
        ){
            on predmetChangedEvent(
                reload
            )}
        signInForm form[
            submit backend.AuthenticationApi.signIn
            model[
                dto backend.AuthenticationApi.SignInRequest](
                username text[
                    min 3
                    max 128]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                username
                password
            )](
            username text[
                bind(
                    model . username
                )
                min 3
                max 128]
            password text[
                bind(
                    model . password
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                fire UserSignedIn(
                    success . accessToken
                    success . id
                    success . ime
                    success . prezime
                    success . indeks
                    success . trenutnoStanjeRacuna
                    success . budzet
                    success . tekuciSemestar
                    success . osvojeniBodovi
                    success . role
                    success . username
                )
                goto MainLayout
            )}
        signUpForm form[
            submit backend.AuthenticationApi.signUp
            model[
                dto backend.AuthenticationApi.SignUpRequest](
                ime text[
                    max 255]
                prezime text[
                    max 255]
                indeks text[
                    max 255]
                trenutnoStanjeRacuna decimal[
                    precision 10
                    scale 4]
                budzet boolean
                tekuciSemestar integer[
                    min 1]
                osvojeniBodovi integer[
                    min 0]
                username text[
                    min 3
                    max 128]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                ime
                prezime
                indeks
                trenutnoStanjeRacuna
                budzet
                tekuciSemestar
                osvojeniBodovi
                username
                password
            )](
            ime text[
                bind(
                    model . ime
                )
                max 255]
            prezime text[
                bind(
                    model . prezime
                )
                max 255]
            indeks text[
                bind(
                    model . indeks
                )
                max 255]
            trenutnoStanjeRacuna decimal[
                bind(
                    model . trenutnoStanjeRacuna
                )
                precision 10
                scale 4]
            budzet boolean[
                bind(
                    model . budzet
                )]
            tekuciSemestar integer[
                bind(
                    model . tekuciSemestar
                )
                min 1]
            osvojeniBodovi integer[
                bind(
                    model . osvojeniBodovi
                )
                min 0]
            username text[
                bind(
                    model . username
                )
                min 3
                max 128]
            password text[
                bind(
                    model . password
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                goto signInPage
            )}
        UserRoleDropDown dropdown[
            enum backend.UserRole]
    )
)